#!/bin/bash

#######
#
# more info: https://github.com/morph027/zfs-cron-scrub-all-pools-sequentially
#
#######

MAIL="morphsen@gmx.com"
SCRIPT=${BASH_SOURCE[${#BASH_SOURCE[@]} - 1]}
ARGS=$(getopt -o e:s -l "exclude:skip-by-timerange" -n "$SCRIPT" -- "$@");

eval set -- "$ARGS";

while true
do
  case "$1" in
    -e|--exclude)
      shift
      if [ -n "$1" ]; then
        EXCLUDE=$1
        shift
      fi
    ;;

    -s|--skip-by-timerange)
      shift
      SKIP="true"
    ;;

    --)
      shift
      break
    ;;

    *)
      echo "wrong/missing parameters"
      exit 1
    ;;
  esac
done

EXCLUDE_LIST="${EXCLUDE//,/\\|}"

if [ ${#EXCLUDE_LIST} -eq 0 ]; then
  ZPOOLS=( $(zpool list -H -o name) )
else
  ZPOOLS=( $(zpool list -H -o name | sed '/\('$EXCLUDE_LIST'\)/d') )
fi

for ZPOOL in ${ZPOOLS[@]}
do

  NOW=$(date +%s)
  # get date of last scrub
  LAST_SCRUB=$(zfs get -Hp -o value scrub:last $ZPOOL)
  # set to now, if does not exist
  if [[ ! $LAST_SCRUB =~ ^[0-9]+$ ]]; then
    LAST_SCRUB=$NOW
  fi
  # seconds to compare unix timestamps, e.g. 2592000 is a month
  SECONDS=2592000
  # if --skip-by-timerange is set, we want to define it
  if [ ! -z $SKIP ]; then
    # how many of these seconds do we want to skip?
    MULTIPLIER=3
  else
    MULTIPLIER=0
  fi
  # get the time of the last scrub plus the range we want to skip
  DIFF=$(expr $LAST_SCRUB + $(expr $MULTIPLIER \* $SECONDS))

  if [ $DIFF -le $NOW ]; then
    logger -t scrub-all "start scrubbing $ZPOOL ..."
    echo "start scrubbing $ZPOOL ..." | mail -s "zpool scrub started" $MAIL
    # start scrubbing
    zpool scrub $ZPOOL

    # wait till scrub is finished
    while zpool status $ZPOOL | grep 'scan:  *scrub in progress' > /dev/null
    do
      sleep 60
    done

    # send a report
    zpool status $ZPOOL | mail -s "zpool status: $ZPOOL" $MAIL

    # log scrub date
    zfs set scrub:last=$(date +%s) $ZPOOL
  else
    logger -t scrub-all "skipping scrub @ $ZPOOL ..."
  fi

done
